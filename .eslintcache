[{"C:\\old things\\apps\\discord\\src\\index.js":"1","C:\\old things\\apps\\discord\\src\\Component\\LeftSlide.js":"2","C:\\old things\\apps\\discord\\src\\App.js":"3","C:\\old things\\apps\\discord\\src\\Component\\RightSlide.js":"4","C:\\old things\\apps\\discord\\src\\Component\\Servers.js":"5","C:\\old things\\apps\\discord\\src\\reportWebVitals.js":"6","C:\\old things\\apps\\discord\\src\\Component\\Profile.js":"7","C:\\old things\\apps\\discord\\src\\redux.js":"8","C:\\old things\\apps\\discord\\src\\Component\\Audio.js":"9"},{"size":712,"mtime":1609659367162,"results":"10","hashOfConfig":"11"},{"size":5790,"mtime":1609149632366,"results":"12","hashOfConfig":"11"},{"size":1962,"mtime":1609758217259,"results":"13","hashOfConfig":"11"},{"size":3456,"mtime":1607473129477,"results":"14","hashOfConfig":"11"},{"size":8174,"mtime":1609665457955,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":499198500000,"results":"16","hashOfConfig":"11"},{"size":1782,"mtime":1609659486726,"results":"17","hashOfConfig":"11"},{"size":1001,"mtime":1609660600296,"results":"18","hashOfConfig":"11"},{"size":3485,"mtime":1609664820638,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13cy0bu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},"C:\\old things\\apps\\discord\\src\\index.js",["44"],"C:\\old things\\apps\\discord\\src\\Component\\LeftSlide.js",["45","46","47"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./leftSlide.css\";\r\nimport { RiAddFill } from \"react-icons/ri\";\r\nimport { MdExplore } from \"react-icons/md\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    padding: 15,\r\n    paddingBottom: 0,\r\n    borderRadius: 5,\r\n    outline: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function LeftSlide({ socket }) {\r\n  const [srNames, setSrNames] = useState([]);\r\n  const [chenger, setChenger] = useState(\"img\");\r\n  const [chenger2, setChenger2] = useState(\"img\");\r\n  const [servers, setServers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [serverCount, setServerCount] = useState(0);\r\n  const sid = useParams(\"serverid\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/api/servers\").then((r) => {\r\n      console.log(r.data);\r\n      setServers(r.data);\r\n    });\r\n  }, [serverCount]);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(chenger2).style.color = \"white\";\r\n    document.getElementById(chenger2).style.backgroundColor = \"#36393f\";\r\n    document.getElementById(chenger2).style.borderRadius = \"50%\";\r\n    document.getElementById(chenger).style.backgroundColor = \"white\";\r\n    document.getElementById(chenger).style.color = \"gray\";\r\n    document.getElementById(chenger).style.borderRadius = \"35%\";\r\n  }, [chenger]);\r\n\r\n  useEffect(() => {\r\n    setSrNames(\r\n      servers.map((it) => {\r\n        let a = it.name.split(\"\");\r\n        let s = [];\r\n        s.push(a.shift());\r\n        s.push(a.pop());\r\n        return { name: s.join(\"\"), id: it._id };\r\n      })\r\n    );\r\n  }, [servers]);\r\n\r\n  const creatServer = () => {\r\n    if (inputName !== \"\") {\r\n      axios\r\n        .post(\"http://localhost:5000/api/servers\", {\r\n          name: inputName,\r\n        })\r\n        .then((r) => {\r\n          console.log(r);\r\n          setServerCount(serverCount + 1);\r\n          setOpen(false);\r\n          setInputName(\"\");\r\n        });\r\n    } else {\r\n      alert(\"please Enter a name\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"leftslide\">\r\n      <Link to=\"/\">\r\n        {\" \"}\r\n        <button\r\n          id=\"img\"\r\n          className=\"leftslide_img\"\r\n          onClick={() => {\r\n            setChenger(\"img\");\r\n            setChenger2(chenger);\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://icon-library.com/images/discord-icon-white/discord-icon-white-6.jpg\"\r\n            alt=\"discord\"\r\n          ></img>\r\n        </button>\r\n      </Link>\r\n\r\n      <hr></hr>\r\n      <div className=\"leftslide_servers\">\r\n        {srNames.map((it) => {\r\n          return (\r\n            <Link to={`/${it.id}`}>\r\n              <button\r\n                key={it.id}\r\n                id={it.id}\r\n                onClick={() => {\r\n                  setChenger(it.id);\r\n                  setChenger2(chenger);\r\n                  if (sid.serverid) {\r\n                    socket.emit(\"dis\", sid.serverid);\r\n                  }\r\n                }}\r\n                className=\"servers_div\"\r\n              >\r\n                <p>{it.name}</p>\r\n              </button>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        className=\"leftslide_buttons\"\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n      >\r\n        <RiAddFill className=\"leftslide_icons\"></RiAddFill>\r\n      </button>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <div className=\"model_div\">\r\n            <h1>Customize your server</h1>\r\n            <h6>\r\n              Give your new server a personality with a name and icon You can\r\n              always change it later\r\n            </h6>\r\n            <img\r\n              src=\"https://cdn.iconscout.com/icon/free/png-256/discord-1693597-1442638.png\"\r\n              alt=\"icon img\"\r\n            ></img>\r\n            <div className=\"model_serName\">\r\n              <p>SERVER NAME</p>\r\n            </div>\r\n            <input\r\n              value={inputName}\r\n              onChange={(e) => {\r\n                setInputName(e.target.value);\r\n              }}\r\n            ></input>\r\n            <p>\r\n              By creating a server , you agree to Discord's{\" \"}\r\n              <a> Community Guidelines</a>\r\n            </p>\r\n            <div className=\"model_button\">\r\n              <button\r\n                className=\"model_back\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n              <button className=\"model_create\" onClick={creatServer}>\r\n                {\" \"}\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <button className=\"leftslide_buttons\">\r\n        <MdExplore className=\"leftslide_icons\"></MdExplore>\r\n      </button>\r\n      <hr></hr>\r\n      <button className=\"leftslide_buttons\">\r\n        <AiOutlineDownload className=\"leftslide_icons\"></AiOutlineDownload>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\old things\\apps\\discord\\src\\App.js",["48","49","50","51"],"C:\\old things\\apps\\discord\\src\\Component\\RightSlide.js",["52"],"import React from \"react\";\r\nimport \"./rightSlide.css\";\r\nimport { GiThreeFriends } from \"react-icons/gi\";\r\nimport { GoInbox } from \"react-icons/go\";\r\nimport { MdTextsms } from \"react-icons/md\";\r\nimport { BsQuestionCircleFill } from \"react-icons/bs\";\r\nimport { RiAddFill } from \"react-icons/ri\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport Profile from \"./Profile\";\r\n\r\nexport default function RightSlide() {\r\n  const messages = [\r\n    {\r\n      name: \"user\",\r\n      img:\r\n        \"https://cdn3.iconfinder.com/data/icons/popular-services-brands-vol-2/512/discord-512.png\",\r\n    },\r\n    {\r\n      name: \"user\",\r\n      img:\r\n        \"https://cdn3.iconfinder.com/data/icons/popular-services-brands-vol-2/512/discord-512.png\",\r\n    },\r\n    {\r\n      name: \"user\",\r\n      img:\r\n        \"https://cdn3.iconfinder.com/data/icons/popular-services-brands-vol-2/512/discord-512.png\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"rightslide\">\r\n      <div className=\"rightslide_left\">\r\n        <div className=\"left_nav\">\r\n          <input\r\n            placeholder=\"Find or start a conversation\"\r\n            className=\"leftNav_input\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"left_friends\">\r\n          <GiThreeFriends className=\"friends_friendIcon\"></GiThreeFriends>\r\n          <p className=\"friends_firends\">Friends</p>\r\n        </div>\r\n\r\n        <div className=\"left_messages\">\r\n          <p>DIRECT MESSAGES</p>\r\n          <RiAddFill className=\"left_add\"></RiAddFill>\r\n        </div>\r\n        <div className=\"left_dMessages\">\r\n          {messages.map((it) => {\r\n            return (\r\n              <div className=\"messages\">\r\n                <img src={it.img} alt={it.name}></img>\r\n                <h4>{it.name}</h4>\r\n                <RiCloseLine className=\"messages_close\"></RiCloseLine>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <Profile></Profile>\r\n      </div>\r\n      <div className=\"rightslide_right\">\r\n        <div className=\"right_nav\">\r\n          <div className=\"nav_left\">\r\n            <GiThreeFriends className=\"nav_friendIcon\"></GiThreeFriends>\r\n            <p className=\"nav_firends\">Friends</p>\r\n            <hr></hr>\r\n            <p>Online</p>\r\n            <p>All</p>\r\n            <p>Pending</p>\r\n            <p>Blocked</p>\r\n            <h4 className=\"nav_addfirends\">Add Friend</h4>\r\n          </div>\r\n\r\n          <div className=\"nav_right\">\r\n            <MdTextsms className=\"nav_leftIconMessage\"></MdTextsms>\r\n\r\n            <hr></hr>\r\n            <GoInbox className=\"nav_leftIcon\"></GoInbox>\r\n            <BsQuestionCircleFill className=\"nav_leftIconQmark\"></BsQuestionCircleFill>\r\n          </div>\r\n        </div>\r\n        <div className=\"right_body\">\r\n          <div className=\"body_left\">\r\n            <img\r\n              className=\"body_img\"\r\n              src=\"https://discord.com/assets/a12ff54c4c5c03b41006fd96a4709c29.svg\"\r\n              alt=\"image for discord\"\r\n            ></img>\r\n            <p>No one`s around to play with Wumpus</p>\r\n          </div>\r\n          <div className=\"body_right\">\r\n            <h4>ACTIVE NOW</h4>\r\n            <div className=\"body_qu\">\r\n              <h4>It`s quiet for now...</h4>\r\n              <p>\r\n                When a friend starts an activity-like playing a game or hanging\r\n                out on voice-we`ll show it here!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["53","54"],"C:\\old things\\apps\\discord\\src\\Component\\Servers.js",["55","56","57","58","59","60","61","62","63"],"C:\\old things\\apps\\discord\\src\\reportWebVitals.js",[],["64","65"],"C:\\old things\\apps\\discord\\src\\Component\\Profile.js",["66"],"import React, { useState } from \"react\";\r\nimport \"./profile.css\";\r\nimport { BsFillMicFill } from \"react-icons/bs\";\r\nimport { BsFillMicMuteFill } from \"react-icons/bs\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { MdHeadset } from \"react-icons/md\";\r\nimport { IoMdSettings } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { muting, unMuting } from \"../redux\";\r\n\r\nexport default function Profile() {\r\n  const mute = useSelector((state) => state.mute);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile_info\">\r\n        <img\r\n          className=\"profile_img\"\r\n          src=\"https://cdn3.iconfinder.com/data/icons/popular-services-brands-vol-2/512/discord-512.png\"\r\n          alt=\"User Icon\"\r\n        ></img>\r\n        <div className=\"profile_user\">\r\n          <h4>username </h4> <p>#8803</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"profile_icons\">\r\n        {mute === true ? (\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch({\r\n                type: muting.type,\r\n              });\r\n            }}\r\n          >\r\n            <BsFillMicFill className=\"micIcon\"></BsFillMicFill>\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch({\r\n                type: unMuting.type,\r\n              });\r\n            }}\r\n          >\r\n            <BsFillMicMuteFill className=\"micIcon\"></BsFillMicMuteFill>\r\n          </IconButton>\r\n        )}\r\n        <IconButton>\r\n          <MdHeadset className=\"icons\"></MdHeadset>\r\n        </IconButton>\r\n        <IconButton>\r\n          <IoMdSettings className=\"icons\"></IoMdSettings>\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\old things\\apps\\discord\\src\\redux.js",[],"C:\\old things\\apps\\discord\\src\\Component\\Audio.js",["67","68","69","70"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport \"./audio.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPeersJs, setSocket } from \"../redux\";\r\n\r\nconst Video = (props) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    props.peer.on(\"stream\", (stream) => {\r\n      ref.current.srcObject = stream;\r\n    });\r\n  }, []);\r\n  return <video playsInline autoPlay ref={ref} />;\r\n};\r\n\r\nexport default function Audio() {\r\n  const [peers, setPeers] = useState([]);\r\n  const socketRef = useRef();\r\n  const userVideo = useRef();\r\n  const peersRef = useRef([]);\r\n  const roomID = useParams(\"serverid\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io.connect(\"http://localhost:5000/\");\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: false, audio: true })\r\n      .then((stream) => {\r\n        userVideo.current.srcObject = stream;\r\n        socketRef.current.emit(\"join room\", roomID.serverid);\r\n        socketRef.current.on(\"all users\", (users) => {\r\n          const peers = [];\r\n\r\n          users.forEach((userID) => {\r\n            const peer = createPeer(userID, socketRef.current.id, stream);\r\n            peersRef.current.push({\r\n              peerID: userID,\r\n              peer,\r\n            });\r\n            peers.push(peer);\r\n          });\r\n          setPeers(() => {\r\n            return peers;\r\n          });\r\n        });\r\n\r\n        socketRef.current.on(\"user joined\", (payload) => {\r\n          const peer = addPeer(payload.signal, payload.callerID, stream);\r\n          peersRef.current.push({\r\n            peerID: payload.callerID,\r\n            peer,\r\n          });\r\n\r\n          setPeers((users) => [...users, peer]);\r\n        });\r\n\r\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\r\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\r\n          item.peer.signal(payload.signal);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  function createPeer(userToSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"sending signal\", {\r\n        userToSignal,\r\n        callerID,\r\n        signal,\r\n      });\r\n    });\r\n\r\n    console.log(peer);\r\n\r\n    return peer;\r\n  }\r\n\r\n  function addPeer(incomingSignal, callerID, stream) {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n    });\r\n\r\n    peer.on(\"signal\", (signal) => {\r\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n\r\n    return peer;\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: setPeersJs.type,\r\n      peers: peers,\r\n    });\r\n    dispatch({\r\n      type: setSocket.type,\r\n      socket: socketRef.current,\r\n    });\r\n  }, [peers]);\r\n  return (\r\n    <div className=\"audio\">\r\n      <video muted ref={userVideo} autoPlay playsInline />\r\n      {peers.map((peer, index) => {\r\n        return <Video key={index} peer={peer} />;\r\n      })}\r\n\r\n      <button\r\n        onClick={() => {\r\n          console.log(peers);\r\n\r\n          peers.forEach((peer) => {\r\n            peer.destroy();\r\n          });\r\n          socketRef.current.emit(\"userDisconnect\");\r\n        }}\r\n      >\r\n        Close\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"71","severity":1,"message":"72","line":8,"column":10,"nodeType":"73","messageId":"74","endLine":8,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":30,"column":5,"nodeType":"77","messageId":"78","endLine":30,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":63,"column":6,"nodeType":"81","endLine":63,"endColumn":15,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":167,"column":15,"nodeType":"85","endLine":167,"endColumn":18},{"ruleId":"71","severity":1,"message":"86","line":5,"column":50,"nodeType":"73","messageId":"74","endLine":5,"endColumn":54},{"ruleId":"71","severity":1,"message":"87","line":13,"column":9,"nodeType":"73","messageId":"74","endLine":13,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":56,"column":1,"nodeType":"90","messageId":"91","endLine":69,"endColumn":2},{"ruleId":"88","severity":1,"message":"89","line":71,"column":1,"nodeType":"90","messageId":"91","endLine":75,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":85,"column":13,"nodeType":"85","endLine":89,"endColumn":14},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"71","severity":1,"message":"98","line":18,"column":8,"nodeType":"73","messageId":"74","endLine":18,"endColumn":13},{"ruleId":"71","severity":1,"message":"99","line":20,"column":10,"nodeType":"73","messageId":"74","endLine":20,"endColumn":21},{"ruleId":"71","severity":1,"message":"100","line":27,"column":10,"nodeType":"73","messageId":"74","endLine":27,"endColumn":15},{"ruleId":"79","severity":1,"message":"101","line":35,"column":6,"nodeType":"81","endLine":35,"endColumn":11,"suggestions":"102"},{"ruleId":"79","severity":1,"message":"103","line":117,"column":6,"nodeType":"81","endLine":117,"endColumn":8,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":202,"column":15,"nodeType":"85","endLine":206,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":211,"column":21,"nodeType":"85","endLine":211,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":239,"column":31,"nodeType":"109","messageId":"110","endLine":239,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":251,"column":31,"nodeType":"109","messageId":"110","endLine":251,"endColumn":33},{"ruleId":"94","replacedBy":"111"},{"ruleId":"96","replacedBy":"112"},{"ruleId":"71","severity":1,"message":"113","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"114","line":6,"column":23,"nodeType":"73","messageId":"74","endLine":6,"endColumn":34},{"ruleId":"79","severity":1,"message":"115","line":16,"column":6,"nodeType":"81","endLine":16,"endColumn":8,"suggestions":"116"},{"ruleId":"79","severity":1,"message":"117","line":66,"column":6,"nodeType":"81","endLine":66,"endColumn":8,"suggestions":"118"},{"ruleId":"79","severity":1,"message":"119","line":113,"column":6,"nodeType":"81","endLine":113,"endColumn":13,"suggestions":"120"},"no-unused-vars","'reduser' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chenger2'. Either include it or remove the dependency array.","ArrayExpression",["121"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'mute' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'Audio' is defined but never used.","'setSocketio' is defined but never used.","'audio' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'messages' and 'socket'. Either include them or remove the dependency array.",["125"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["122"],["123"],"'useState' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'roomID.serverid'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["128"],{"desc":"129","fix":"130"},"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [chenger, chenger2]",{"range":"141","text":"142"},"Update the dependencies array to be: [sid, socket]",{"range":"143","text":"144"},"Update the dependencies array to be: [messages, socket]",{"range":"145","text":"146"},"Update the dependencies array to be: [props.peer]",{"range":"147","text":"148"},"Update the dependencies array to be: [roomID.serverid]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch, peers]",{"range":"151","text":"152"},[2072,2081],"[chenger, chenger2]",[1296,1301],"[sid, socket]",[3387,3389],"[messages, socket]",[482,484],"[props.peer]",[2073,2075],"[roomID.serverid]",[2990,2997],"[dispatch, peers]"]